CREATE TABLE NodeActions
(
	NodeActionID	INT PRIMARY KEY,
	NodeActionName	VARCHAR(20) NOT NULL
);
CREATE TABLE FileActions
(
	FileActionID	INT PRIMARY KEY,
	FileActionName	VARCHAR(20) NOT NULL
);
CREATE TABLE FileExtensions
(
	ExtensionID	INT PRIMARY KEY,
	Extension	VARCHAR(80) NOT NULL
);
CREATE TABLE Nodes
(
	NodeID		INT PRIMARY KEY,
	NodeName	VARCHAR(20) NOT NULL,
	UserID		INT NOT NULL,
	IsShared	BIT NOT NULL
);
CREATE TABLE Users
(
	UserID		INT PRIMARY KEY,
	LoginWord	VARCHAR(20) NOT NULL,
	PassPhrase	VARCHAR(20) NOT NULL,
	FirstName	VARCHAR(20),
	LastName	VARCHAR(20),
	RootNodeID	INT,
	CONSTRAINT FOREIGN KEY (RootNodeID) REFERENCES Nodes(NodeID)
);
ALTER TABLE Nodes ADD CONSTRAINT FOREIGN KEY (UserID) REFERENCES Users(UserID);
CREATE TABLE Edges
(
	EdgeID		INT PRIMARY KEY,
	ChildID		INT NOT NULL,
	ParentID	INT NOT NULL,
	UserID		INT NOT NULL,
	CONSTRAINT FOREIGN KEY (ChildID) REFERENCES Nodes(NodeID),
	CONSTRAINT FOREIGN KEY (ParentID) REFERENCES Nodes(NodeID),
	CONSTRAINT FOREIGN KEY (UserID) REFERENCES Users(UserID)
);
CREATE TABLE NodesLog
(
	NodesLogID		INT PRIMARY KEY,
	NodeActionID	INT NOT NULL,
	NodeID			INT NOT NULL,
	UserID			INT NOT NULL,
	ActionTimeStamp	DATETIME NOT NULL,
	CONSTRAINT FOREIGN KEY (NodeActionID) REFERENCES NodeActions(NodeActionID),
	CONSTRAINT FOREIGN KEY (NodeID) REFERENCES Nodes(NodeID),
	CONSTRAINT FOREIGN KEY (UserID) REFERENCES Users(UserID)
);
CREATE TABLE Files
(
	FileID		INT PRIMARY KEY,
	Name		VARCHAR(20) NOT NULL,
	ExtensionID INT NOT NULL,
	FileData	BLOB,
	IsShared	BIT NOT NULL,
	CONSTRAINT FOREIGN KEY (ExtensionID) REFERENCES FileExtensions(ExtensionID)
);
CREATE TABLE FilesLog
(
	FilesLogID		INT PRIMARY KEY,
	Field			INT NOT NULL,
	UserID			INT NOT NULL,
	FileActionID	INT NOT NULL,
	ActionTimeStamp	DATETIME NOT NULL,
	CONSTRAINT FOREIGN KEY (Field) REFERENCES Files(FileID),
	CONSTRAINT FOREIGN KEY (UserID) REFERENCES Users(UserID),
	CONSTRAINT FOREIGN KEY (FileActionID) REFERENCES FileActions(FileActionID)
);
CREATE TABLE NodeFiles
(
	NodeID	INT NOT NULL,
	FileID	INT NOT NULL,
	PRIMARY KEY (NodeID, FileID),
	CONSTRAINT FOREIGN KEY (NodeID) REFERENCES Nodes(NodeID),
	CONSTRAINT FOREIGN KEY (FileID) REFERENCES Files(FileID)
);
CREATE TABLE Ratings
(
	UserID	INT NOT NULL,
	FileID	INT NOT NULL,
	Value	INT NOT NULL,
	PRIMARY KEY (UserID, FileID),
	CONSTRAINT FOREIGN KEY (UserID) REFERENCES Users(UserID),
	CONSTRAINT FOREIGN KEY (FileID) REFERENCES Files(FileID)
);
CREATE TABLE Comments
(
	CommentID	INT PRIMARY KEY,
	UserID		INT NOT NULL,
	FileID		INT NOT NULL,
	CommentText	INT NOT NULL,
	CONSTRAINT FOREIGN KEY (UserID) REFERENCES Users(UserID),
	CONSTRAINT FOREIGN KEY (FileID) REFERENCES Files(FileID)
);
